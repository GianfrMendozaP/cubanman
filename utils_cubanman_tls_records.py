#!/usr/bin/python3
def recordLen(headers:list) -> int:
    #returns total length of the record including the header length (5) 
    #takes the first 5 bytes of the record as argument in a LIST format

    return ((headers[3] * 256) + headers[4]) + 5

def x16Scan(data:bytes, dataLength:int=0, showRecords:bool=False) -> int:
    #returns bytes left to receive. 0 if NONE
    if not dataLength: dataLength = len(data)
    byteCount = 0

    while True:

        headers = [byte for byte in data[:5]]
        if len(headers) < 5: return -1
        if showRecords: print(headers)
        length = recordLen(headers)
        if showRecords: print(length, data[:length])
        data = data[length:]
        byteCount += length

        if byteCount >= dataLength: break

    return byteCount - dataLength

def main():
    sample = b'\x17\x03\x03\x05s\xd9\xcfB\x95\xe0\xb2\x8d\x82\xac\xe0T\xd7\xd3X\xabV\xd3\xbc,\xd0)\xca\xb9\xb5\xc2Y&\xd2\xc8\x92\x83<\x87h\x18\xd1fd\x19\xc3nn\xa5\x8cK\xc6&\r*Z\xd2\xc7\xf5\x800\x9c\xbby\xc6\x01k\x8b\xd0\x88-\x05fi>^\xe3\xf7\x1b6\x04%\xbd\x1d\x18u\xd0\x8b}\xba\x99\tH\x1f\xc7h\xab\xe3\x8bI1{K\xb72>Sn\xc4\x84\xd9\x903\xb2\xc6\xfc4\xf7\xb5\x06\xc9o>\xc0\x08K\\j\x1d\x1b\x8d\x18\xcd9\xfc\x06\xc3\xe4"\x83\x03\xe4\x97\x03V1:\xfa\x18u\xed\xfc\x16\x8b\x90\xb1\x89\xe6-=\x14\x91\xfeL}&\xda}\x02\xec(\xcc\x85\xea\x14r:\x1a\x9b\xcak\xaf\xff\xbd\xb9\xa4\xfdX\xcb\xe9\xc6\x87\xf2pt\x82"\xcd\r\xd6\xa2\xa9a\xed\xf7\xbaE\xba\n\xb2\xe8\xf4\x1e6\xb4\xd7\x16\x0e\xb9\x9b,\xbb\\(\xd4\xfcq@\x12Ty|\xe9\x1dm\x9f>\xd2]\x04\xed\xc2{]\xe6S[\xcd\xf4\xffV\xba\x9d\xd9\r\xd9`\xff\xfc\xf0\xdd4\xadSBC\xa6\xce\xe8\x99\x0b]\xc4sYo\x03[\xae\xb6\x02%\xd7\nD\xdb}\xfb\xcb\xe7\xc4\xa4o\x9e\x15\x80\xed\xe4\xcf\xa2x7\x0b\x9e\xc6g\xbe\xfa\x14\xe9/\xff[\xba\xfc\xf3\xf5\x0f\xd3\xf5O\x1aNKn\x9b\xe0\xfbF$\x87\xda\xc1\xf0\xf21\x87G\xe9\xb9_kG\x19\x9e\xea\x9a\xfe\x11\x8d\xa5)2Yi"\xdd\xc5\x98\nJW-\x923\xfd,f8h]\xbf\xc5H:$Erp\x94\x01-\xfa\x9fy\x07\x88\x9b\x0f\xbd\xe1\xdf\xf9\xe6\xe5{\xe1\xce;5\xa3\xb2\x95\xb6\xb9\x18\x9b\xce\xcf\xbbRc\xf3\xb9(_\xb5\xa5\',\xba\xbc\xfeLy\x01\xd2\xb5\xd7\x1e\xf8\xf5PQ\xb5\xb8&\x10\xb8\xdb\xa4\n\xff\xf2\x05U\x1b{\xa8\x8a\x87G\xcf\xd7\x85\xa5\xf6\xd7U\x9eL\xbcA\xaa\x04\xa7$F\x8d&Ruj\xfb?I\x99\xd3\x11\x13gm(\x80\x06ww\xb9\xeb\xa0&\x07\xdc7\x84\xccg8~\xd5\xb2\xa1P\x9aH4\xf7\xa1r\xab\x15\x1f\xab/\x8b\x11\xdd~\xbef\x99!\xba\x82\x0b\xbddY9@\xff\x06\xd1Bmq:\x85\x1e\xd8\x86TR\xee\x99\x1f5\xf1_A>\xae_\x8b\xb7p/,\xa4uH\x89\xf9\xc7\xa1\x12\x80G\xc4\xc0M-y\xbfU\xda\xaaO{`\xa3\x9e\xf6WYB\r\x87$\x97X\x98aN\x90\xde\xb1\xd2!5\xf7\xa5\x025\x8bF-\xadT\x8f[\xa5\x18\x91YV\xac\xe3\x9fpgw<\xff\xf0\x8a\x90L{\x05#\x18\x02\xfa\xa8JC\xc1\x17\x06\xbb)_V<,y\xebd\xad7.Ql\xd1\x00\xb4\xb9\xb7\xb1\x98\'g#\xe3U\xa5\xc7%9.\xc9:y\xbe\x1b\xeb\xf1\xfah\xd1\x9b2u\x0e\xf0\xbf\xac\x08\xd46\x11\r\xfb\x80\xfa\xa9\x9c\x13}?\x8fdG\xba\x00yT=y/~\xa5\x89\xf5}\x98\x914V\x85\xc2z\xf5\rF\x94\x93\xdeG0|LqW\xe5\x02\xf3\x04\x8a\x80\xf7X\xa8\xd7\x0e\xaa\xf5\xda.=:\x144\xec\x82x!\xa7\xf3\x92\xa2\x93\xbc4)\x9f\x8e\xc7\xc9\xe4\xdbua\x16\x89\xebj@\x0fy\xdd\xf1\xc2\x9a\xe1#\xbd<\xe8\x91\x9a\x04\x02j,\xd9\xbf\x06\'\xc7\x8at\xb6\x03\x1b\xcc\x88Hh\x06\x85\xb7\xb4aWW|\x0b\xf8\xaa\x80\xb8\xc4T\x1d\xa3\xf2\x8c\x94\x8bc\xc7"03L\xb5\x952\xea)-\xc2\x96\xcf"h\xac\xde\xfc\xf0\xbe#K\xb0\x9e\x084\xf9\xe0\xc7\xa9\x83\xf2\x96\xfc\xe4m\x87F:8\x15|$\x8f\x15\x08\x03g\xde\xd4\x94\x8d\x8a\xe4\xdc\xc2\xf0\xda\xbf\xd6\xbf&R\x1a\x9bh\x8f\xfc\xb2\xa3]\xa2\x99\x059\xb6P2\xbeS\xcc\xc2\xe8;\x1e6\x13\x0e\x07\x13\x98}\x89\'\xa0\xc8\x02]\xb9\xfc\x9as\x8b \xd9\xef\x7fGP~\xf5\xecv\xbe\x1eE\x04[\x1c:a*R\xccC.\x00\xc2\xa9\\R\xb1\x15\xf5\\V\x07\x99\x92^\xe7\x14\xb9$zn\x8eM\xfdi\xc1N\x89\x83vh\xa5\x13\x8d\xd7\x895I/W\x82\xfa\x8a\xe4az\xaa\x92?\xd3_\xfa\xe1\xb7r\xf99\xd8\xc8\x83\xc4\x9e\xf4\x08P\x8f\x7f4\x91\x90\xb6\xba\x05\xf1\xc5\xfe\xd4#\x88\x97\x1aG\xdc\x98\xf9\xf9\xd5\xa9\xa3|?J\t\xbd2\x9b\xe6XP/7!m\x87\xb3\xd8\x98\xa6,i\xf1\xbb\x18\xa7!2\x8a4-\x1e\xc4I\x9a\xac\x19\xa3)\x15\x7f\xa1\x87\x9e5P\xe72;c\xc8\x8d;\xc7$\x94\x9a\xe0\xc9\xca\x1f\xa7\xed\xda#\x10\xbf\xb6\xd9\x02ts>G\xcf\x90rD1\x16\xc3|@\xea}\xae\x13\xfc!\xaa8\x94\x8f\xdd\x11\xe6d\x1e\x7f^\x0e\x1bc#\xe5p%6\x06\x0f\x9d4\xed/\xb2\x03\xf5a\xf6Lqu4\x0cpu4\x9d0\x80\xfb\xf0P=;\xc9\xd2p\x97N\xc9\x8ap\xd9\x00\xc3\xd6\xd4\xe9\x8dt\x8eA\xc8q:\xc0\xfb\x8aC\xe9\x87D\xb7X$\x96\xc2\xcf\xd6\x02F\xc5|e\xd2\x90(&\x13\x85\xbf\x9d\xa9\xb8\xe2\x15\xc8\xef\xe4\xd5p\xf6?\xd5\xd2\xa3\xc0\x0b\xe7\xf4\xbb\xf5\xe0\x97\x00\xe3B\xa0ye\xc3\xdd\xc7\xcd\x1f\x1c\x1c\x86\x95pt\xeb\x1c=u\x11\xa7\xbc\xc0\xd7\x99\xaa\xe3\x80m\xe7\xaf\xb9:\x88\xe4\x84J\xaf\xdf)\xd9\x87\xcb\x15\xe2\xee<\xd7C\xdb\x16\x082\xb7\xc6\x16fk\x01`{\x0f\xff\xe2I=\x86\x19\xf3\xec\x87\x9dhoV\xd1\x06-\x9c6\xd5\xc4\x91\x12\x1b\'s\xa8-B\xd4\\M\xe6\xce\xacp `#\xe2\xb4\xf5Q\xc0=\x84@\x99\x92.\xb83\x18\x93I\xe5qS\xd7[o1\x18>\xa4\x0c\xf70X`\xfc\xfc%\xeb\x05\x02\n\xea\xde\xce \'s\xd4M7\x18\x17\x03\x03'


    print(x16Scan(sample,0,True))

if __name__ == '__main__':
    main()
